import pandas as pd
import re

#loading the original data generated by searching articles
citation_level_data = pd.read_csv('citation_data.csv')

#this function expands the string-list of pairs imported in the citation_level_data
#to a list of pairs of paragraphs and scores
def paragraphExpander(texted_list):
    parens = re.compile('\(.*?[^)]\)')
    listedVersion = parens.findall(texted_list)
    clean_pairs = []
    for pair in listedVersion:
        newPair = pair[1:-1]
        para = str(newPair.split(', ')[0].strip()[1:-1])
        weight = float(newPair.split(', ')[1].strip())
        clean_pairs.append((para, weight))

    return clean_pairs


#this function takes a citation from the citation_level_data and creates
#however many new citatino entries are generated by givin each pair
#in the score list entry its own entry.
def citationExpander(df_in):
    cite_df = pd.DataFrame(columns=['filename','title','author','year','citation order','citation text','paragraph','credit'])
    for pair in paragraphExpander(df_in['citation scoring']):
        pair_list = []
        pair_list.append(df_in[0])
        pair_list.append(df_in[1])
        pair_list.append(df_in[2])
        pair_list.append(df_in[3])
        pair_list.append(df_in[4])
        pair_list.append(df_in[5])
        pair_list.append(pair[0])
        pair_list.append(pair[1])
        pair_df = pd.DataFrame([pair_list],columns=['filename','title','author','year','citation order','citation text','paragraph','credit'])
        cite_df = cite_df.append(pair_df, ignore_index = True)

    #print('expanded', cite_df.iloc[0]['filename'], "into", str(len(cite_df)), "entries" )
    return cite_df

#now we'll add all of the paragraph level data together into a new data frame
para_level_data = pd.DataFrame(columns=['filename','title','author','year','citation order','citation text','paragraph','credit'])
for index in citation_level_data.index:
    para_level_data = para_level_data.append(citationExpander(citation_level_data.loc[index]), ignore_index = True)

#finally, we'll output the data frame into a usable CSV file for easy import to Tableau
para_level_data.to_csv('paragraph_level_citation data.csv')
print('done')
